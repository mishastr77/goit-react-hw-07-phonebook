{"version":3,"sources":["Components/Form/form.module.css","Components/Filter/filter.module.css","Components/Container/container.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","Components/Container/Container.js","Components/Section/Section.js","redux/contacts/contacts-operations.js","Components/Form/Form.js","redux/contacts/contacts-selectors.js","Components/ContactsList/ContactsList.js","Components/Filter/Filter.js","Components/OnLoader/OnLoader.js","App.js","index.js"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","fetchContactRequest","fetchContactSuccess","fetchContactError","filterChange","items","createReducer","state","payload","filter","id","_","loading","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistorAndStore","store","configureStore","reducer","contacts","contactsReducer","devTools","process","Container","children","className","styles","container","Section","title","axios","defaults","baseURL","Form","name","props","number","handleChange","e","currentTarget","value","setState","addNoRepeatContact","some","toLowerCase","alert","onSubmit","reset","handleSubmit","preventDefault","inputNameId","shortid","generate","inputNumberId","this","htmlFor","inputForm","type","onChange","pattern","required","buttonForm","Component","defaultProps","connect","dispatch","contact","post","then","data","catch","addContact","getLoading","getFilter","getVisibleContacts","createSelector","normalizedFilter","includes","onDeleteContact","delete","deleteContact","map","onClick","onChangeFilter","target","filterLabel","filterInput","OnLoader","color","height","width","App","onFetchContacts","isLoadingContacts","get","response","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2c7c4ae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputForm\":\"form_inputForm__3UNTF\",\"buttonForm\":\"form_buttonForm__23jq4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"filter_filterLabel__3_ECc\",\"filterInput\":\"filter_filterInput__1PxS0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__3xaAV\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContactRequest = createAction(\"contacts/addContactRequest\");\r\nconst addContactSuccess = createAction(\"contacts/addContactSuccess\");\r\nconst addContactError = createAction(\"contacts/addContactError\");\r\nconst deleteContactRequest = createAction(\"contacts/deleteContactRequest\");\r\nconst deleteContactSuccess = createAction(\"contacts/deleteContactSuccess\");\r\nconst deleteContactError = createAction(\"contacts/deleteContactError\");\r\nconst fetchContactRequest = createAction(\"contacts/fetchContactRequest\");\r\nconst fetchContactSuccess = createAction(\"contacts/fetchContactSuccess\");\r\nconst fetchContactError = createAction(\"contacts/fetchContactError\");\r\nconst filterChange = createAction(\"contacts/filterChange\");\r\n\r\nexport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  fetchContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  filterChange,\r\n};\r\n\r\n/* import shortid from \"shortid\"; */\r\n/* const contactAdd = createAction(\"contacts/add\", ({ name, number }) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n})); */\r\n\r\n/* const contactAdd = ({ name, number }) => ({\r\n  type: types.ADD,\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}); */\r\n\r\n/* const contactDelete = createAction(\"contacts/delete\"); */\r\n/* const contactDelete = (contactId) => ({\r\n  type: types.DELETE,\r\n  payload: contactId,\r\n}); */\r\n/* const filterChange = (value) => ({\r\n  type: types.FILTER_CHANGE,\r\n  payload: value,\r\n}); */\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  deleteContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  addContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  fetchContactSuccess,\r\n  fetchContactRequest,\r\n  fetchContactError,\r\n  filterChange,\r\n} from \"./contacts-actions\";\r\n/* import initialContacts from \"../../Data/initialContacts.json\"; */\r\n\r\nconst items = createReducer(/* initialContacts */ [], {\r\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [filterChange]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n\r\n/* const items = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD:\r\n      return [...state, payload];\r\n\r\n    case types.DELETE:\r\n      return state.filter(({ id }) => id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}; */\r\n\r\n/* const filter = (state = \"\", { type, payload }) => {\r\n  switch (type) {\r\n    case types.FILTER_CHANGE:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}; */\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  /* persistStore, */\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\n/* const contactsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n}; */\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\n/* const persistor = persistStore(store); */\r\n\r\nconst persistorAndStore = { store /* persistor */ };\r\n\r\nexport default persistorAndStore;\r\n","import React from \"react\";\nimport styles from \"./container.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\n\nexport default Container;\n\nContainer.propTypes = {\n  children: PropTypes.array.isRequired,\n};\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./section.module.css\";\r\n\r\nconst Section = ({ children, title }) => {\r\n  return (\r\n    <div>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.object.isRequired,\r\n};\r\n","import axios from \"axios\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n} from \"./contacts-actions\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:4040\";\r\n\r\nconst addContact =\r\n  ({ name, number }) =>\r\n  (dispatch) => {\r\n    const contact = { name, number };\r\n\r\n    dispatch(addContactRequest());\r\n    return axios\r\n      .post(\"/contacts\", contact)\r\n      .then(({ data }) => dispatch(addContactSuccess(data)))\r\n      .catch((error) => dispatch(addContactError(error)));\r\n  };\r\n\r\nconst deleteContact = (id) => (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n  return axios\r\n    .delete(\"/contacts/\" + id)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch((error) => dispatch(deleteContactError(error)));\r\n};\r\n\r\nconst fetchContact = () => (dispatch) => {\r\n  dispatch(fetchContactRequest());\r\n  return axios\r\n    .get(\"/contacts\")\r\n    .then((response) => dispatch(fetchContactSuccess(response.data)))\r\n    .catch((error) => dispatch(fetchContactError(error)));\r\n};\r\n\r\nexport { addContact, deleteContact, fetchContact };\r\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Section from \"../Section\";\nimport shortid from \"shortid\";\nimport styles from \"./form.module.css\";\nimport { connect } from \"react-redux\";\nimport { addContact } from \"../../redux/contacts/contacts-operations\";\n\nclass Form extends Component {\n  static defaultProps = {\n    name: \"\",\n    number: \"\",\n  };\n\n  static propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.string,\n  };\n\n  state = {\n    name: this.props.name,\n    number: this.props.number,\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  addNoRepeatContact = (state, contacts) => {\n    const { name, number } = state;\n    if (\n      contacts.some(\n        (contacts) => contacts.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    if (contacts.some((contacts) => contacts.number === number)) {\n      alert(`${number} is already in contacts`);\n      return;\n    }\n\n    this.props.onSubmit(state);\n    this.reset();\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { contacts } = this.props;\n    this.addNoRepeatContact(this.state, contacts);\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  inputNameId = shortid.generate();\n  inputNumberId = shortid.generate();\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <Section title=\"Phonebook\">\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor={this.inputNameId}>\n            Name\n            <input\n              className={styles.inputForm}\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              required\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              id={this.inputNameId}\n            />\n          </label>\n          <label htmlFor={this.inputNumberId}>\n            Number\n            <input\n              className={styles.inputForm}\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              onChange={this.handleChange}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              required\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              id={this.inputNumberId}\n            />\n          </label>\n          <button className={styles.buttonForm} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </Section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (name, number) => dispatch(addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getLoading = (state) => state.contacts.loading;\r\n\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getAllContacts = (state) => state.contacts.items;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(\r\n      (contact) =>\r\n        contact.name.toLowerCase().includes(normalizedFilter) ||\r\n        contact.number.includes(filter)\r\n    );\r\n  }\r\n);\r\n","import PropTypes from \"prop-types\";\r\nimport \"./contactsList.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteContact } from \"../../redux/contacts/contacts-operations\";\r\nimport { getVisibleContacts } from \"../../redux/contacts/contacts-selectors\";\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id}>\r\n        <p>\r\n          {name}: {number}\r\n        </p>\r\n        <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getVisibleContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleteContact: (id) => dispatch(deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./filter.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { filterChange } from \"../../redux/contacts/contacts-actions\";\r\nimport { getFilter } from \"../../redux/contacts/contacts-selectors\";\r\n\r\nconst Filter = ({ filter, onChangeFilter }) => (\r\n  <label className={styles.filterLabel}>\r\n    Find contacts by name and number\r\n    <input\r\n      className={styles.filterInput}\r\n      type=\"text\"\r\n      value={filter}\r\n      onChange={onChangeFilter}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChangeFilter: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filter: getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChangeFilter: (e) => dispatch(filterChange(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst OnLoader = () => {\r\n  return <Loader type=\"Puff\" color=\"#00BFFF\" height={100} width={100} />;\r\n};\r\n\r\nexport default OnLoader;\r\n","import React, { Component } from \"react\";\nimport Container from \"./Components/Container\";\nimport Form from \"./Components/Form\";\nimport ContactsList from \"./Components/ContactsList\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Filter from \"./Components/Filter\";\nimport { fetchContact } from \"./redux/contacts/contacts-operations\";\nimport OnLoader from \"./Components/OnLoader\";\nimport { getLoading } from \"./redux/contacts/contacts-selectors\";\n\nclass App extends Component {\n  static propTypes = {\n    onFetchContacts: PropTypes.func,\n    isLoadingContacts: PropTypes.bool,\n  };\n  componentDidMount() {\n    this.props.onFetchContacts();\n  }\n\n  render() {\n    return (\n      <Container>\n        <Form />\n        <h2>Contacts</h2>\n        {this.props.isLoadingContacts ? (\n          <OnLoader />\n        ) : (\n          <>\n            <Filter />\n            <ContactsList />\n          </>\n        )}\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isLoadingContacts: getLoading(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onFetchContacts: () => dispatch(fetchContact()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n/* import { PersistGate } from \"redux-persist/integration/react\"; */\nimport \"./index.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}